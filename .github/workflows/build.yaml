name: build

on:
  push:
    branches:
      - master
      - main

permissions:
  id-token: write
  attestations: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COSIGN_EXPERIMENTAL: "true"
      COSIGN_YES: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Install Crane
      - uses: imjasonh/setup-crane@v0.3

      # Install Cosign
      - uses: sigstore/cosign-installer@main

      - name: Install Task
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Get Metadata
        id: info
        run: |
          task info

      - uses: anchore/sbom-action@v0
        with:
          path: ./build/
          format: 'spdx-json'
          output-file: 'sbom.spdx.json'

      - uses: actions/attest-sbom@v1
        with:
          subject-path: 'bin/my-artifact.tar.gz'
          sbom-path: 'sbom.spdx.json'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        if: github.ref != 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          build-args: |
            VERSION=${{ steps.info.outputs.version }}
            SHA=${{ github.sha }}
          context: ./src
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/xunholy/${{ github.event.repository.name }}/example:${{ github.sha }}

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

      - name: Get the digest of the OCI artifact
        id: crane
        run: |
          DIGEST=$(crane digest ghcr.io/xunholy/${{ github.event.repository.name }}/example:${{ github.sha }})
          echo "DIGEST=$DIGEST" >> $GITHUB_OUTPUT

      # Cosign the OCI artifact
      - name: Sign the OCI artifact
        run: cosign attest --predicate predecates/lint.json ghcr.io/xunholy/${{ github.event.repository.name }}/example@${{ steps.crane.outputs.DIGEST }} -y

      # Cosign the OCI artifact
      - name: Sign the OCI artifact [NOTPROD]
        run: cosign sign ghcr.io/xunholy/${{ github.event.repository.name }}/example@${{ steps.crane.outputs.DIGEST }} -y
